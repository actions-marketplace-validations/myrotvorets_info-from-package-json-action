{"version":3,"sources":["../webpack:/info-from-package-json-action/lib/src/main.js","../webpack:/info-from-package-json-action/node_modules/@actions/core/lib/command.js","../webpack:/info-from-package-json-action/node_modules/@actions/core/lib/core.js","../webpack:/info-from-package-json-action/node_modules/@actions/core/lib/file-command.js","../webpack:/info-from-package-json-action/node_modules/@actions/core/lib/utils.js","../webpack:/info-from-package-json-action/external \"fs\"","../webpack:/info-from-package-json-action/external \"os\"","../webpack:/info-from-package-json-action/external \"path\"","../webpack:/info-from-package-json-action/external \"util\"","../webpack:/info-from-package-json-action/webpack/bootstrap","../webpack:/info-from-package-json-action/webpack/runtime/compat","../webpack:/info-from-package-json-action/webpack/startup"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","default","exports","core","__webpack_require__","path_1","util_1","fs_1","stat","promisify","readFile","async","exists","path","e","run","_a","_b","dir","getInput","required","process","cwd","file","join","setFailed","content","encoding","json","JSON","parse","setOutput","name","version","description","homepage","bugs","url","repository","error","message","os","utils_1","issueCommand","command","properties","cmd","Command","stdout","write","toString","EOL","issue","CMD_STRING","[object Object]","cmdStr","keys","length","first","key","val","escapeProperty","escapeData","s","toCommandValue","replace","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","done","then","apply","command_1","file_command_1","ExitCode","exportVariable","convertedVal","env","filePath","delimiter","commandValue","setSecret","secret","addPath","inputPath","options","toUpperCase","Error","trim","setCommandEcho","enabled","exitCode","Failure","isDebug","debug","warning","info","startGroup","endGroup","group","fn","saveState","getState","fs","existsSync","appendFileSync","input","String","stringify","module","require","__webpack_module_cache__","moduleId","threw","__webpack_modules__","ab","__dirname"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\nconst path_1 = require(\"path\");\nconst util_1 = require(\"util\");\nconst fs_1 = __importDefault(require(\"fs\"));\nconst stat = util_1.promisify(fs_1.default.stat);\nconst readFile = util_1.promisify(fs_1.default.readFile);\nasync function exists(path) {\n    try {\n        await stat(path);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nasync function run() {\n    var _a, _b;\n    try {\n        const dir = core.getInput('workingdir', { required: false }) || process.cwd();\n        const file = path_1.join(dir, 'package.json');\n        if (!(await exists(file))) {\n            core.setFailed(`Unable to find file: ${file}`);\n            return;\n        }\n        const content = await readFile(file, { encoding: 'utf-8' });\n        const json = JSON.parse(content);\n        core.setOutput('packageName', json.name);\n        core.setOutput('packageVersion', json.version);\n        core.setOutput('packageDescription', json.description);\n        core.setOutput('packageHomepage', json.homepage);\n        core.setOutput('packageBugsUrl', (_a = json.bugs) === null || _a === void 0 ? void 0 : _a.url);\n        core.setOutput('packageScmUrl', (_b = json.repository) === null || _b === void 0 ? void 0 : _b.url);\n    }\n    catch (error) {\n        core.setFailed(error.message);\n    }\n}\nvoid run();\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n//# sourceMappingURL=utils.js.map","module.exports = require(\"fs\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"util\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n__webpack_require__.ab = __dirname + \"/\";","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(536);\n"]}